ALGORITHM algo task2
VAR
 set1,set2 : ARRAY_OF INTEGER;
 check:BOOLEAN
 sum=0
BEGIN
    FOR i FROM 0 TO set1.length-1 STEP step  DO
    check:=false
        FOR g FROM 0 TO set2.lenght-1 STEP step  DO
        IF (set1[i]=set2[g]) THEN
            check:=true Break 
        END_IF
       
            
        END_FOR
         IF (check=false) THEN
            sum:=sum+set1[i] 
        END_IF
    END_FOR
    FOR g FROM 0 TO set2.length-1 STEP step  DO
    check:=false
        FOR i FROM 0 TO set1.lenght-1 STEP step  DO
        IF (set2[g]=set1[i]) THEN
            check:=true Break 
        END_IF
       
            
        END_FOR
         IF (check=false) THEN
            sum:=sum+set2[g] 
        END_IF
    END_FOR
    Write(sum)
    
    
END



PROCEDURE dot_product(v1,v2 :ARRAY_OF INTEGER  ,VAR ps:INTEGER)
VAR
    i:INTEGER;
BEGIN
    ps:=0;
    IF (v1.lenght<>v2.lenght) THEN
        Write("we can't calculate 2 vectors with differnt length");
    END_IF
    FOR i FROM 0 TO v1.lenght-1 STEP 1 DO
            ps:=ps+(v1[i]*v2[i]);
    END_FOR
END


ALGORITHM vectors
VAR
    arr:ARRAY_OF ARRAY;
    ps,i,j: INTEGER;
BEGIN
        FOR i FROM 0 TO arr.lenght-2 STEP step  DO
            FOR j FROM i+1 TO arr.lenght-1 STEP step  DO
                dot_product(arr[i],arr[j],ps);
                IF (ps=0) THEN
                    Write(arr[i],arr[j],"are two orrt vectors ")
                END_IF
            END_FOR
        END_FOR
END


FUNCTION dot_product(v1,v2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i,n,ps,m:INTEGER;
BEGIN
    n:=v1.length-1;
    m:=v2.length-1;
    ps:=0;
    IF (n <> m) THEN
        
        Write("We can't caluclate the product of 2 vectors have different length")
        RETURN ps := NAN;
    END_IF
    FOR i FROM 0 TO n STEP 1  DO
        ps:=ps+v1[i]*v2[i]
    END_FOR
    RETURN ps ;
END

ALGORITHM orth_vector
VAR
    vectors : ARRAY_OF ARRAY;
    ps,i,j,n:INTEGER;
BEGIN
    n:=vectors.length-1;
    FOR i FROM 0 TO n-1 STEP 1  DO
        FOR j FROM i+1 TO n STEP 1  DO
            ps := dot_product(vectors[i],vectors[j])
            IF (ps = 0) THEN
                Write(vectors[i],"and",vectors[j],"are orthogonal")
            END_IF
        END_FOR
    END_FOR
END